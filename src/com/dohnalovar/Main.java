/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/
package com.dohnalovar;

import java.util.Scanner;
import java.util.function.BiPredicate;
import java.util.function.IntFunction;

public class Main {

    public static void main(String[] args) {
	// write your code here
        IntFunction<Integer> isEven = (num) -> (num%2 == 0) ? num : 0;
        BiPredicate<Integer, Integer> isLessThenLimit = (limit, num) -> (num < limit)? true : false;

        int sum = 2;
        FibonacciNum fib = new FibonacciNum();
        System.out.print("Get the limit for Fibonacci sum: ");
        Scanner sc = new Scanner(System.in);
        Integer limit = sc.nextInt();
        Integer num;
        while (isLessThenLimit.test(limit, num = isEven.apply(fib.getNextFibonacci()))){
            sum += num;
        }
        System.out.println("Sum of even fibonacci numbers less then limit "+limit+" is "+sum);
    }
}
